===============================================================================================

Randomisierte Algorithmen:
Vermeidung von worst-case Eingaben


Spielbaemue
Spiel:
Zwei Spieler
Jeder legt abwechselnd 1 oder 2 Hoelzer auf stabpel
5. Zuendholz verliert

Gewinnstrategie: Erster Spieler legt 1 Holz auf den Tisch, dann kann er immer gewinnen


Spieler: Alice, Bob
Entscheidungsbaum an Tafel 

Blaetter des Baumes haben Spielwerte
Hoehere Werte ist besser fuer Alice (spieler 1)
"Auszalung an Alice" <=> negative Auszahlung an Bob

Werte beste Strategien aus (von unten nach oben)

Jedem Knoten in Baum wird ein Spielwert zugeordnet, solange ein Spieler noch eine Gewinnstrategie
hat, wird dem Knoten der Wert 1 zugeordnet

Jedem Knoten wird der Wert zugeordnet den er bei optimaler Spielstrategie noch garantiert werden
kann

Spielbaum zeitg groesstmoeglichen Auszahlungswert, der von Anfang des Spiels garantiert werden kann



Algorithmus
Input: Spielbaum
Aufgabe: Werte alle Werte des Spielbaums T aus (insbesondere der Wurzel)



Untere Schranke:
Vereinfachte Annahmen -->	Spielwerte seien 0/1
				T sei ein VOLLSTAENDIGER kaerer Baum (jeder Spieler hat immer k
					Optionen, also jeder Knoten hat k Kinder)
				T hat Tiefe 2t (jeder Spieler hat t Zuege)

Deterministischer Algo muss im worst-case alle Blaetter Anschauen
Worst case check:
Jeweils das letzte gecheckte Kind eines Knotens entscheidet, ob der Knoten selbst 1 oder 0 ist
	--> alle Kinder eines jeden Knotens muessen gecheckt werden
Baum kann so generiert werden, dass das letzte Kind eines (Teil)Baumes den Wert der Wurzel ent-
schieden werden kann


Induktionsannahme:
Dasselbe gila auch fuer Baeume T_k^t-1
Jedes Blatt eines Baumes kann ersetzt werden durch einen Teilbaum ersetzt, der so gewaehlt ist,
	dass alle Teilbaeume ausgewertet werden muessen, um die Blaetter auszuwerten

Laufzeit eines Det. Algo ~k^(2t)


Gedanke:
Randomisiere die Reihenfolge in der Kinder eines Knotens angeschaut werden

Der randomisierte Algo inspiziert uer deje Eingabe T_2^t hoechstens 3^t Blaetter im Erwartungswert

Grundlage Analyse:
Eingaben fuer Laufzeitanalyse ist IMMER mit worst-case
--> Det. Algorithmus hat mit worst-case immer maximal lange Laufzeit
--> Randomisierter Algo hat bei worst-case Eingabe eine 'in Erwartung' deutlich bessere Laufzeit

Merke:
Baum ist nicht heterogen max oder min!!
Wenn z.B. zwei Spieler gegeneinander Spielen, dann sind Knoten abwechselnt MAX, MIN, MAX, MIN, etc.

===============================================================================================

-Las Vegas Algorithmus:
Immer korrektes Ergebnis, aber Laufzeiten beeinflusst durch Randomisierung

-Monte Carlo Algorithmen:
Korrektheitdes Ergebnisses wird durch Randomisierunb beeinflusst und Laufzeit auch
(evtl. aber deutlich schneller als deterministische Algorithmen)







===============================================================================================
